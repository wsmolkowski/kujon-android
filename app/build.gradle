apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'io.fabric'
apply plugin: "androidsvgdrawable"
apply plugin: 'jsonschema2pojo'
apply plugin: 'com.jakewharton.hugo'
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        applicationId "mobi.kujon"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 79
        versionName "1.2.7"
        multiDexEnabled true
        manifestPlaceholders = [manifestApplicationId          : "${applicationId}",
                                onesignal_app_id               : "f01a20f9-bbe7-4c89-a017-bf8930c61cf4",
                                onesignal_google_project_number: "896765768628"]

        buildConfigField "String", "URL_PROD", "\"https://api.kujon.mobi/\""
        buildConfigField "String", "URL_DEMO", "\"https://api-demo.kujon.mobi/\""
    }

    sourceSets {
        main.res.srcDirs = [main.res.srcDirs, "build/generated/res/main"]
        main.assets.srcDirs = [main.assets.srcDirs, "build/generated/assets/main"]
    }

    signingConfigs {
        debug {
            storeFile file('../debug.keystore')
        }
        release {
            keyAlias = "Kujon"
        }
    }

    buildTypes {

        debug {
            applicationIdSuffix '.debug'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ext.betaDistributionReleaseNotesFilePath = "release_notes/${android.defaultConfig.versionName}.txt"
            ext.betaDistributionEmails = "akonior@gmail.com, wojciech.smolkowski@gmail.com, dzizes451@gmail.com"
            signingConfig signingConfigs.release
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    applicationVariants.all { variant ->
        def appName = 'Kujon'

        variant.outputs.each { output ->
            def newApkName = "${appName}-${output.baseName}-${variant.versionName}_${variant.versionCode}.apk"
            output.outputFile = new File(output.outputFile.parent, newApkName)
        }
    }

    dexOptions {
        jumboMode = true
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
    maven { url 'https://maven.fabric.io/public' }
}



dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
//    compile(name: 'foam-release', ext: 'aar')
    compile(name: 'khacpv-android-week-view', ext: 'aar')
    compile('com.crashlytics.sdk.android:crashlytics:2.6.6@aar') {
        transitive = true;
    }
    compile("com.mikepenz:materialdrawer:$material_drawer_version") {
        transitive = true
    }
    compile("com.github.tony19:logback-android-classic:$logback_version") {
        // workaround issue #73
        exclude group: 'com.google.android', module: 'android'
    }
    compile("com.github.afollestad:sectioned-recyclerview:$sectioned_recycler_view_version") {
        transitive = true
    }


    //Support
    compile "com.android.support:appcompat-v7:$support_version"
    compile "com.android.support:design:$support_version"
    compile "com.android.support:cardview-v7:$support_version"
    //Google play services
    compile "com.google.android.gms:play-services-auth:$google_play_services"
    compile "com.google.android.gms:play-services-maps:$google_play_services"
    compile "com.google.android.gms:play-services-gcm:$google_play_services"
    compile "com.google.android.gms:play-services-drive:$google_play_services"

    //helpers
    compile "com.jakewharton:butterknife:$butterknife_version"
    apt "com.jakewharton:butterknife-compiler:$butterknife_version"
    compile "com.squareup.picasso:picasso:$picasso_version"
    compile "com.jakewharton.picasso:picasso2-okhttp3-downloader:$picasso_okhttp_downloader_version"

    //rx
    compile "io.reactivex:rxjava:$rx_java"
    compile "io.reactivex:rxandroid:$rx_android"
    compile "com.jakewharton.rxbinding:rxbinding-appcompat-v7:$rx_bindings"

    //network
    compile "com.parse.bolts:bolts-tasks:$bolts_version"
    compile "com.squareup.retrofit2:retrofit:$retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    compile "com.squareup.retrofit2:adapter-rxjava:$retrofitVersion"
    compile "com.squareup.okhttp3:logging-interceptor:$logging_interceptor_version"
    compile "com.squareup.okhttp3:okhttp-urlconnection:$okhttp_url_connection_version"

    //one signal
    compile "com.onesignal:OneSignal:$onesignal_version"

    //dagger
    compile "com.google.dagger:dagger:$daggerVersion"
    apt "com.google.dagger:dagger-compiler:${daggerVersion}"
    provided 'org.glassfish:javax.annotation:10.0-b28'

    //rest
    compile "com.github.javadev:underscore:$underscore_version"
    compile "net.danlew:android.joda:$jodatime_version"

    compile "com.github.tony19:logback-android-core:$logback_version"
    compile "commons-lang:commons-lang:$commons_lang_version"
    compile "com.rockerhieu:rv-adapter-endless:$rv_endless_adapter_version"
    compile "uk.co.chrisjenx:calligraphy:$calligraphy_version"
    compile "com.annimon:stream:$stream_version"
    compile "com.facebook.android:facebook-android-sdk:$facebook_version"



    compile('com.google.api-client:google-api-client-android:1.22.0') {
        exclude group: 'org.apache.httpcomponents'
    }
    compile('com.google.apis:google-api-services-drive:v3-rev57-1.22.0') {
        exclude group: 'org.apache.httpcomponents'
    }


    //TEST
    testCompile "junit:junit:$junit_version"
    testCompile "org.mockito:mockito-core:$mockito_version"
    androidTestCompile "com.android.support:support-annotations:$support_version"
    androidTestCompile "com.android.support.test:runner:$testrunner_version"
    androidTestCompile "com.android.support.test:rules:$testrunner_version"
    androidTestCompile "org.mockito:mockito-core:$mockito_version"
    androidTestCompile "com.google.dexmaker:dexmaker:$dexmarker_version"
    androidTestCompile "com.google.dexmaker:dexmaker-mockito:$dexmarker_version"
//    androidTestApt "com.google.dagger:dagger-compiler:$daggerVersion"
    annotationProcessor 'com.google.dagger:dagger-compiler:2.8'
}

if (project.properties.keySet().containsAll(['storeFile', 'storePassword', 'keyAlias', 'keyPassword'])) {
    android.signingConfigs.release.storeFile = file(storeFile)
    android.signingConfigs.release.storePassword = storePassword
    android.signingConfigs.release.keyAlias = keyAlias
    android.signingConfigs.release.keyPassword = keyPassword
} else {
    android.buildTypes.release.signingConfig = null
}



jsonSchema2Pojo {
    // doc: https://github.com/joelittlejohn/jsonschema2pojo/tree/master/jsonschema2pojo-gradle-plugin
    // https://github.com/joelittlejohn/jsonschema2pojo/blob/master/jsonschema2pojo-gradle-plugin/src/main/groovy/org/jsonschema2pojo/gradle/JsonSchemaExtension.groovy
    generateBuilders = false
    usePrimitives = true
    source = files("json")
    targetDirectory = file("${project.buildDir}/generated-sources/js2p")
    targetPackage = 'mobi.kujon.network.json.gen'
    propertyWordDelimiters = [] as char[]
    useLongIntegers = false
    useDoubleNumbers = true
    useBigDecimals = false
    includeHashcodeAndEquals = true
    includeToString = true
    annotationStyle = 'gson'
    customAnnotator = 'org.jsonschema2pojo.NoopAnnotator'
    includeJsr303Annotations = false
    sourceType = 'json'
    removeOldOutput = true
    outputEncoding = 'UTF-8'
    useJodaDates = false
    useCommonsLang3 = false
    initializeCollections = true
    classNamePrefix = ""
    classNameSuffix = ""
    includeConstructors = false
    parcelable = false
    includeAccessors = false
}