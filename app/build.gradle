apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'io.fabric'
apply plugin: 'com.getkeepsafe.dexcount'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "mobi.kujon"
        minSdkVersion 16
        targetSdkVersion 22
        versionCode 11
        versionName "0.9.5"

        manifestPlaceholders = [manifestApplicationId: "${applicationId}",
                                onesignal_app_id: "50e558f1-b575-4554-9517-d1ea7b143a03",
                                onesignal_google_project_number: "774265221464"]
    }

    signingConfigs {
        release {
            keyAlias = "Kujon"
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ext.betaDistributionReleaseNotesFilePath = "release_notes/${android.defaultConfig.versionName}.txt"
            ext.betaDistributionEmails = "akonior@gmail.com"
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    applicationVariants.all { variant ->
        def appName = 'Kujon'

        variant.outputs.each { output ->
            def newApkName
            if (output.zipAlign) {
                newApkName = "${appName}-${output.baseName}-${variant.versionName}_${variant.versionCode}.apk"
            } else {
                newApkName = "${appName}-${output.baseName}-${variant.versionName}_${variant.versionCode}-unaligned.apk"
            }
            output.outputFile = new File(output.outputFile.parent, newApkName)
        }
    }

    lintOptions {
        abortOnError false
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile(name:'foam-release', ext:'aar')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.3.0'
    compile 'com.android.support:design:23.3.0'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.google.android.gms:play-services-auth:8.4.0'
    compile 'com.parse.bolts:bolts-tasks:1.4.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.0@aar') {
        transitive = true;
    }
    compile 'com.squareup.retrofit2:retrofit:2.0.1'
    compile 'com.squareup.retrofit2:converter-gson:2.0.1'
    compile 'com.android.support:cardview-v7:23.3.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.github.alamkanak:android-week-view:1.2.6'
    compile 'com.github.javadev:underscore:1.13'
    compile 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.0.2'
    compile 'net.danlew:android.joda:2.9.3'
    compile 'com.squareup.okhttp3:logging-interceptor:3.2.0'
    compile 'com.onesignal:OneSignal:2.+@aar'
    compile 'com.google.android.gms:play-services-gcm:8.4.0'
    compile 'com.google.android.gms:play-services-analytics:8.4.0'
    compile "com.google.android.gms:play-services-location:8.4.0"
    compile('com.mikepenz:materialdrawer:5.2.0@aar') {
        transitive = true
    }
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'com.github.tony19:logback-android-core:1.1.1-5'
    compile('com.github.tony19:logback-android-classic:1.1.1-5') {
        // workaround issue #73
        exclude group: 'com.google.android', module: 'android'
    }

    compile ('com.papertrailapp:logback-syslog4j:1.0.0'){
        exclude group: 'ch.qos.logback'
    }
//    compile 'com.percolate:foam:0.9.4'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
}

if (project.properties.keySet().containsAll(['storeFile', 'storePassword', 'keyAlias', 'keyPassword'])) {
    android.signingConfigs.release.storeFile = file(storeFile)
    android.signingConfigs.release.storePassword = storePassword
    android.signingConfigs.release.keyAlias = keyAlias
    android.signingConfigs.release.keyPassword = keyPassword
} else {
    android.buildTypes.release.signingConfig = null
}

apply plugin: 'com.google.gms.google-services'