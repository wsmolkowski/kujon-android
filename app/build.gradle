apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'io.fabric'
//apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: "androidsvgdrawable"
apply plugin: 'jsonschema2pojo'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.jakewharton.hugo'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "mobi.kujon"
        minSdkVersion 16
        targetSdkVersion 21
        versionCode 32
        versionName "0.9.26"

        manifestPlaceholders = [manifestApplicationId          : "${applicationId}",
                                onesignal_app_id               : "f01a20f9-bbe7-4c89-a017-bf8930c61cf4",
                                onesignal_google_project_number: "896765768628"]
    }

    sourceSets {
        main.res.srcDirs = [main.res.srcDirs, "build/generated/res/main"]
        main.assets.srcDirs = [main.assets.srcDirs, "build/generated/assets/main"]
    }

    signingConfigs {
        release {
            keyAlias = "Kujon"
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ext.betaDistributionReleaseNotesFilePath = "release_notes/${android.defaultConfig.versionName}.txt"
            ext.betaDistributionEmails = "akonior@gmail.com, wojciech.smolkowski@gmail.com, dzizes451@gmail.com"
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    applicationVariants.all { variant ->
        def appName = 'Kujon'

        variant.outputs.each { output ->
            def newApkName
            if (output.zipAlign) {
                newApkName = "${appName}-${output.baseName}-${variant.versionName}_${variant.versionCode}.apk"
            } else {
                newApkName = "${appName}-${output.baseName}-${variant.versionName}_${variant.versionCode}-unaligned.apk"
            }
            output.outputFile = new File(output.outputFile.parent, newApkName)
        }
    }

    lintOptions {
        abortOnError false
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile(name: 'foam-release', ext: 'aar')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.3.0'
    compile 'com.android.support:design:23.3.0'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.google.android.gms:play-services-auth:9.0.0'
    compile 'com.parse.bolts:bolts-tasks:1.4.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.0@aar') {
        transitive = true;
    }
    compile 'com.squareup.retrofit2:retrofit:2.0.1'
    compile 'com.squareup.retrofit2:converter-gson:2.0.1'
    compile 'com.android.support:cardview-v7:23.3.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.github.alamkanak:android-week-view:1.2.6'
    compile 'com.github.javadev:underscore:1.13'
    compile 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.0.2'
    compile 'net.danlew:android.joda:2.9.3'
    compile 'com.squareup.okhttp3:logging-interceptor:3.2.0'
    compile "com.squareup.okhttp3:okhttp-urlconnection:3.2.0"
    compile 'com.onesignal:OneSignal:2.+@aar'
    compile 'com.google.android.gms:play-services-gcm:9.0.0'
    compile 'com.google.android.gms:play-services-analytics:9.0.0'
    compile 'com.google.android.gms:play-services-location:9.0.0'
    compile('com.mikepenz:materialdrawer:5.2.0@aar') {
        transitive = true
    }
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'com.github.tony19:logback-android-core:1.1.1-5'
    compile('com.github.tony19:logback-android-classic:1.1.1-5') {
        // workaround issue #73
        exclude group: 'com.google.android', module: 'android'
    }
    compile('com.papertrailapp:logback-syslog4j:1.0.0') {
        exclude group: 'ch.qos.logback'
    }
    //    compile 'com.percolate:foam:0.9.4'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile('com.github.afollestad:sectioned-recyclerview:0.2.2') {
        transitive = true
    }
    compile 'commons-lang:commons-lang:2.6'
//    compile 'javax.annotation:jsr250-api:1.0'
    apt 'com.google.dagger:dagger-compiler:2.2'
    compile 'com.google.dagger:dagger:2.2'
    provided 'javax.annotation:jsr250-api:1.0'
    compile 'com.rockerhieu:rv-adapter-endless:1.1'
}

if (project.properties.keySet().containsAll(['storeFile', 'storePassword', 'keyAlias', 'keyPassword'])) {
    android.signingConfigs.release.storeFile = file(storeFile)
    android.signingConfigs.release.storePassword = storePassword
    android.signingConfigs.release.keyAlias = keyAlias
    android.signingConfigs.release.keyPassword = keyPassword
} else {
    android.buildTypes.release.signingConfig = null
}

apply plugin: 'com.google.gms.google-services'

task svgToDrawablePng(type: fr.avianey.androidsvgdrawable.gradle.SvgDrawableTask) {
    from = files('src/main/svg-png')
    to = file('build/generated/res/main')
    createMissingDirectories = true
    overwriteMode = 'ifModified'
    targetedDensities = ['ldpi', 'hdpi', 'mdpi', 'xhdpi', 'xxhdpi', 'xxxhdpi']
    ninePatchConfig = file('src/main/svg-png/9patch.json')
    outputFormat = 'PNG'
    outputType = 'drawable'
    svgMaskFiles = files('src/main/svg-png/mask')
    svgMaskResourceFiles = files('src/main/svg-png/mask/svg')
}

task svgToMipmapPng(type: fr.avianey.androidsvgdrawable.gradle.SvgDrawableTask) {
    from = files('src/main/svg-mipmap')
    to = file('build/generated/res/main')
    createMissingDirectories = true
    overwriteMode = 'ifModified'
    targetedDensities = ['ldpi', 'hdpi', 'mdpi', 'xhdpi', 'xxhdpi', 'xxxhdpi']
    outputFormat = 'PNG'
    outputType = 'mipmap'
}

jsonSchema2Pojo {
    // doc: https://github.com/joelittlejohn/jsonschema2pojo/tree/master/jsonschema2pojo-gradle-plugin
    // https://github.com/joelittlejohn/jsonschema2pojo/blob/master/jsonschema2pojo-gradle-plugin/src/main/groovy/org/jsonschema2pojo/gradle/JsonSchemaExtension.groovy
    generateBuilders = false
    usePrimitives = true
    source = files("json")
    targetDirectory = file("${project.buildDir}/generated-sources/js2p")
    targetPackage = 'mobi.kujon.network.json.gen'
    propertyWordDelimiters = [] as char[]
    useLongIntegers = false
    useDoubleNumbers = true
    useBigDecimals = false
    includeHashcodeAndEquals = true
    includeToString = true
    annotationStyle = 'gson'
    customAnnotator = 'org.jsonschema2pojo.NoopAnnotator'
    includeJsr303Annotations = false
    sourceType = 'json'
    removeOldOutput = true
    outputEncoding = 'UTF-8'
    useJodaDates = false
    useCommonsLang3 = false
    initializeCollections = true
    classNamePrefix = ""
    classNameSuffix = ""
    includeConstructors = false
    parcelable = false
    includeAccessors = false
}